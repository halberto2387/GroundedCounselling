{
  "openapi": "3.1.0",
  "info": {
    "title": "GroundedCounselling API",
    "description": "A secure, HIPAA-compliant platform for counselling practice management",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint for Docker",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "summary": "Api Health",
        "description": "API health check",
        "operationId": "api_health_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialists": {
      "post": {
        "tags": [
          "specialists"
        ],
        "summary": "Create Specialist Profile",
        "description": "Create a specialist profile for the current user.",
        "operationId": "create_specialist_profile_api_v1_specialists_post",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialistCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "specialists"
        ],
        "summary": "List Specialists",
        "description": "Get list of specialists with optional filtering.",
        "operationId": "list_specialists_api_v1_specialists_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Available"
            }
          },
          {
            "name": "specializations",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specializations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialistOut"
                  },
                  "title": "Response List Specialists Api V1 Specialists Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialists/me": {
      "get": {
        "tags": [
          "specialists"
        ],
        "summary": "Get My Specialist Profile",
        "description": "Get current user's specialist profile.",
        "operationId": "get_my_specialist_profile_api_v1_specialists_me_get",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "specialists"
        ],
        "summary": "Update My Specialist Profile",
        "description": "Update current user's specialist profile.",
        "operationId": "update_my_specialist_profile_api_v1_specialists_me_put",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "specialists"
        ],
        "summary": "Delete My Specialist Profile",
        "description": "Delete current user's specialist profile.",
        "operationId": "delete_my_specialist_profile_api_v1_specialists_me_delete",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialists/{specialist_id}": {
      "get": {
        "tags": [
          "specialists"
        ],
        "summary": "Get Specialist",
        "description": "Get specialist by ID.",
        "operationId": "get_specialist_api_v1_specialists__specialist_id__get",
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Specialist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "specialists"
        ],
        "summary": "Update Specialist",
        "description": "Update specialist profile (only by the specialist themselves).",
        "operationId": "update_specialist_api_v1_specialists__specialist_id__put",
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Specialist Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialists/me/availability": {
      "patch": {
        "tags": [
          "specialists"
        ],
        "summary": "Toggle My Availability",
        "description": "Toggle current specialist's availability status.",
        "operationId": "toggle_my_availability_api_v1_specialists_me_availability_patch",
        "parameters": [
          {
            "name": "is_available",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Is Available"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialistOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create Booking",
        "description": "Create a new booking as a patient.",
        "operationId": "create_booking_api_v1_bookings_post",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/my-bookings": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Get My Bookings",
        "description": "Get current user's bookings as a patient.",
        "operationId": "get_my_bookings_api_v1_bookings_my_bookings_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BookingStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingOut"
                  },
                  "title": "Response Get My Bookings Api V1 Bookings My Bookings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/specialist-bookings": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Get Specialist Bookings",
        "description": "Get bookings for the current specialist.",
        "operationId": "get_specialist_bookings_api_v1_bookings_specialist_bookings_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BookingStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingOut"
                  },
                  "title": "Response Get Specialist Bookings Api V1 Bookings Specialist Bookings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Get Booking",
        "description": "Get booking by ID (only if user is patient or specialist for this booking).",
        "operationId": "get_booking_api_v1_bookings__booking_id__get",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "bookings"
        ],
        "summary": "Update Booking",
        "description": "Update booking (only by patient who created it).",
        "operationId": "update_booking_api_v1_bookings__booking_id__put",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/cancel": {
      "patch": {
        "tags": [
          "bookings"
        ],
        "summary": "Cancel Booking",
        "description": "Cancel a booking (by patient or specialist).",
        "operationId": "cancel_booking_api_v1_bookings__booking_id__cancel_patch",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/confirm": {
      "patch": {
        "tags": [
          "bookings"
        ],
        "summary": "Confirm Booking",
        "description": "Confirm a pending booking (only by specialist).",
        "operationId": "confirm_booking_api_v1_bookings__booking_id__confirm_patch",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/complete": {
      "patch": {
        "tags": [
          "bookings"
        ],
        "summary": "Complete Booking",
        "description": "Mark a booking as completed (only by specialist).",
        "operationId": "complete_booking_api_v1_bookings__booking_id__complete_patch",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Create Session",
        "description": "Create a session for a booking (only by specialist).",
        "operationId": "create_session_api_v1_sessions_post",
        "parameters": [
          {
            "name": "booking_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/my-sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get My Sessions As Patient",
        "description": "Get sessions for current user as a patient.",
        "operationId": "get_my_sessions_as_patient_api_v1_sessions_my_sessions_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionOut"
                  },
                  "title": "Response Get My Sessions As Patient Api V1 Sessions My Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/specialist-sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get My Sessions As Specialist",
        "description": "Get sessions for current specialist.",
        "operationId": "get_my_sessions_as_specialist_api_v1_sessions_specialist_sessions_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionOut"
                  },
                  "title": "Response Get My Sessions As Specialist Api V1 Sessions Specialist Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Session",
        "description": "Get session by ID (only if user is patient or specialist for this session).",
        "operationId": "get_session_api_v1_sessions__session_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sessions"
        ],
        "summary": "Update Session",
        "description": "Update session (only by specialist who created it).",
        "operationId": "update_session_api_v1_sessions__session_id__put",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Delete Session",
        "description": "Delete session (only by specialist who created it).",
        "operationId": "delete_session_api_v1_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/booking/{booking_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Session By Booking",
        "description": "Get session for a specific booking.",
        "operationId": "get_session_by_booking_api_v1_sessions_booking__booking_id__get",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Booking Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/notes": {
      "patch": {
        "tags": [
          "sessions"
        ],
        "summary": "Update Session Notes",
        "description": "Update session notes (only by specialist).",
        "operationId": "update_session_notes_api_v1_sessions__session_id__notes_patch",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "notes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Notes"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/recording": {
      "patch": {
        "tags": [
          "sessions"
        ],
        "summary": "Set Recording Url",
        "description": "Set recording URL for session (only by specialist).",
        "operationId": "set_recording_url_api_v1_sessions__session_id__recording_patch",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "recording_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Url"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability": {
      "post": {
        "tags": [
          "availability"
        ],
        "summary": "Create Availability",
        "description": "Create an availability slot for the current specialist.",
        "operationId": "create_availability_api_v1_availability_post",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/bulk": {
      "post": {
        "tags": [
          "availability"
        ],
        "summary": "Create Bulk Availability",
        "description": "Create multiple availability slots at once.",
        "operationId": "create_bulk_availability_api_v1_availability_bulk_post",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAvailabilityCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityOut"
                  },
                  "title": "Response Create Bulk Availability Api V1 Availability Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/me": {
      "get": {
        "tags": [
          "availability"
        ],
        "summary": "Get My Availability",
        "description": "Get availability slots for the current specialist.",
        "operationId": "get_my_availability_api_v1_availability_me_get",
        "parameters": [
          {
            "name": "day_of_week",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DayOfWeek"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Day Of Week"
            }
          },
          {
            "name": "is_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Available"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityOut"
                  },
                  "title": "Response Get My Availability Api V1 Availability Me Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/specialist/{specialist_id}": {
      "get": {
        "tags": [
          "availability"
        ],
        "summary": "Get Specialist Availability",
        "description": "Get availability slots for a specific specialist (public endpoint).",
        "operationId": "get_specialist_availability_api_v1_availability_specialist__specialist_id__get",
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Specialist Id"
            }
          },
          {
            "name": "day_of_week",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DayOfWeek"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Day Of Week"
            }
          },
          {
            "name": "is_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Available"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityOut"
                  },
                  "title": "Response Get Specialist Availability Api V1 Availability Specialist  Specialist Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/specialist/{specialist_id}/slots": {
      "get": {
        "tags": [
          "availability"
        ],
        "summary": "Get Available Slots",
        "description": "Get available time slots for a specific specialist and date.",
        "operationId": "get_available_slots_api_v1_availability_specialist__specialist_id__slots_get",
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Specialist Id"
            }
          },
          {
            "name": "target_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Target Date"
            }
          },
          {
            "name": "duration_minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 480,
              "minimum": 15,
              "default": 60,
              "title": "Duration Minutes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableSlot"
                  },
                  "title": "Response Get Available Slots Api V1 Availability Specialist  Specialist Id  Slots Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/{availability_id}": {
      "get": {
        "tags": [
          "availability"
        ],
        "summary": "Get Availability",
        "description": "Get availability slot by ID (only for current specialist).",
        "operationId": "get_availability_api_v1_availability__availability_id__get",
        "parameters": [
          {
            "name": "availability_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Availability Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "availability"
        ],
        "summary": "Update Availability",
        "description": "Update availability slot (only for current specialist).",
        "operationId": "update_availability_api_v1_availability__availability_id__put",
        "parameters": [
          {
            "name": "availability_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Availability Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "availability"
        ],
        "summary": "Delete Availability",
        "description": "Delete availability slot (only for current specialist).",
        "operationId": "delete_availability_api_v1_availability__availability_id__delete",
        "parameters": [
          {
            "name": "availability_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Availability Id"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availability/me/all": {
      "delete": {
        "tags": [
          "availability"
        ],
        "summary": "Clear My Availability",
        "description": "Clear all availability slots for the current specialist.",
        "operationId": "clear_my_availability_api_v1_availability_me_all_delete",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AvailabilityCreate": {
        "properties": {
          "day_of_week": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "day_of_week",
          "start_time",
          "end_time"
        ],
        "title": "AvailabilityCreate"
      },
      "AvailabilityOut": {
        "properties": {
          "day_of_week": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "day_of_week",
          "start_time",
          "end_time",
          "id",
          "specialist_id",
          "created_at",
          "updated_at"
        ],
        "title": "AvailabilityOut"
      },
      "AvailabilityUpdate": {
        "properties": {
          "day_of_week": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              },
              {
                "type": "null"
              }
            ]
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "is_available": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Available"
          }
        },
        "type": "object",
        "title": "AvailabilityUpdate"
      },
      "AvailableSlot": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "duration_minutes"
        ],
        "title": "AvailableSlot",
        "description": "Available time slot for booking"
      },
      "BookingCreate": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 15.0,
            "title": "Duration Minutes",
            "description": "Duration in minutes (15 min to 8 hours)",
            "default": 60
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "specialist_id"
        ],
        "title": "BookingCreate"
      },
      "BookingOut": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 15.0,
            "title": "Duration Minutes",
            "description": "Duration in minutes (15 min to 8 hours)",
            "default": 60
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "status": {
            "$ref": "#/components/schemas/BookingStatus"
          },
          "cancellation_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancellation Reason"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "id",
          "patient_id",
          "specialist_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "BookingOut"
      },
      "BookingStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "cancelled",
          "completed",
          "no_show"
        ],
        "title": "BookingStatus"
      },
      "BookingUpdate": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 15.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "cancellation_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancellation Reason"
          }
        },
        "type": "object",
        "title": "BookingUpdate"
      },
      "BulkAvailabilityCreate": {
        "properties": {
          "availabilities": {
            "items": {
              "$ref": "#/components/schemas/AvailabilityCreate"
            },
            "type": "array",
            "title": "Availabilities"
          }
        },
        "type": "object",
        "required": [
          "availabilities"
        ],
        "title": "BulkAvailabilityCreate",
        "description": "Create multiple availability slots for a specialist"
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ],
        "title": "DayOfWeek"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SessionCreate": {
        "properties": {
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url"
          },
          "is_recorded": {
            "type": "boolean",
            "title": "Is Recorded",
            "default": false
          },
          "session_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Summary"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          }
        },
        "type": "object",
        "required": [
          "booking_id"
        ],
        "title": "SessionCreate"
      },
      "SessionOut": {
        "properties": {
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url"
          },
          "is_recorded": {
            "type": "boolean",
            "title": "Is Recorded",
            "default": false
          },
          "session_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Summary"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "actual_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Start Time"
          },
          "actual_end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual End Time"
          },
          "status": {
            "$ref": "#/components/schemas/SessionStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "booking_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "SessionOut"
      },
      "SessionStatus": {
        "type": "string",
        "enum": [
          "scheduled",
          "in_progress",
          "completed",
          "cancelled",
          "no_show"
        ],
        "title": "SessionStatus"
      },
      "SessionUpdate": {
        "properties": {
          "actual_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Start Time"
          },
          "actual_end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual End Time"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url"
          },
          "is_recorded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Recorded"
          },
          "session_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Summary"
          }
        },
        "type": "object",
        "title": "SessionUpdate"
      },
      "SpecialistCreate": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "specializations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Specializations"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate",
            "description": "Hourly rate in USD"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "default": true
          },
          "years_experience": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Years Experience"
          },
          "license_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Number"
          }
        },
        "type": "object",
        "title": "SpecialistCreate"
      },
      "SpecialistOut": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "specializations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Specializations"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate",
            "description": "Hourly rate in USD"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "default": true
          },
          "years_experience": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Years Experience"
          },
          "license_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Number"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "SpecialistOut"
      },
      "SpecialistUpdate": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "specializations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specializations"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate"
          },
          "is_available": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Available"
          },
          "years_experience": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Years Experience"
          },
          "license_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Number"
          }
        },
        "type": "object",
        "title": "SpecialistUpdate"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role"
        ],
        "title": "UserOut"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}