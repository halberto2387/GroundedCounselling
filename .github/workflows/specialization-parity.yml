name: Specialization Parity Check

on:
  workflow_dispatch:
    inputs:
      database_url:
        description: 'Override DATABASE_URL (optional)'
        required: false
        type: string
  schedule:
    - cron: '0 3 * * *'  # Daily at 03:00 UTC

jobs:
  parity:
    runs-on: ubuntu-latest
    env:
      # Base secrets (may be overridden by workflow_dispatch input)
      BASE_DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: services/api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Resolve database URL
        id: resolve-db
        run: |
          if [ -n "${{ github.event.inputs.database_url }}" ]; then
            echo "db_url=${{ github.event.inputs.database_url }}" >> $GITHUB_OUTPUT
          else
            echo "db_url=$BASE_DATABASE_URL" >> $GITHUB_OUTPUT
          fi

      - name: Run migrations (ensure schema up to date)
        working-directory: services/api
        run: |
          alembic upgrade head
        env:
          DATABASE_URL: ${{ steps.resolve-db.outputs.db_url }}

      - name: Run parity check
        working-directory: services/api
        run: |
          python -m scripts.check_specialization_parity --database-url "${{ steps.resolve-db.outputs.db_url }}" --output parity_report.json

      - name: Upload parity report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: parity-report
          path: services/api/parity_report.json
          retention-days: 14

      - name: Generate trend summary
        if: always()
        run: |
          echo "### Specialization Parity Summary" >> $GITHUB_STEP_SUMMARY
          echo "Run ID: $GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY
          if [ -f services/api/parity_report.json ]; then
            TOTAL=$(jq '.total_specialists' services/api/parity_report.json)
            MISMATCH=$(jq '.mismatch_total' services/api/parity_report.json)
            PARITY=$(jq '.parity' services/api/parity_report.json)
            echo "Total specialists: $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "Mismatches: $MISMATCH" >> $GITHUB_STEP_SUMMARY
            if [ "$PARITY" = "true" ]; then
              echo "Status: ✅ Parity" >> $GITHUB_STEP_SUMMARY
            else
              echo "Status: ❌ Mismatches detected" >> $GITHUB_STEP_SUMMARY
              echo "#### Examples" >> $GITHUB_STEP_SUMMARY
              jq -r '.examples[] | "- Specialist \(.specialist_id): JSON=\(.json_count) vs Assoc=\(.association_count)"' services/api/parity_report.json | head -n 10 >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "Report file missing" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Notify Slack (on failure)
        if: failure()
        run: |
          echo "Slack notification placeholder: configure SLACK_WEBHOOK_URL in repo secrets to enable."

      - name: Notify Teams (on failure)
        if: failure()
        run: |
          echo "Teams notification placeholder: configure TEAMS_WEBHOOK_URL in repo secrets to enable."
