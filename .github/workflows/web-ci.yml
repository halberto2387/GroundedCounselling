name: Web CI

on:
  workflow_dispatch: {}
  workflow_call: {}
  push:
    branches: [main, develop, 'feature/**', 'hotfix/**']
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "8"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

  # Built-in pnpm cache is enabled via setup-node above

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: |
          # Run lint if script exists; otherwise skip without failing
          pnpm -C apps/web run lint --if-present || echo "Lint skipped"

      - name: Run type checking
        run: |
          # Run type-check if script exists; otherwise skip without failing
          pnpm -C apps/web run type-check --if-present || echo "Type-check skipped"

      - name: Run tests
        run: |
          # Run tests if script exists; otherwise skip without failing
          pnpm -C apps/web run test --if-present -- --watchAll=false --coverage || echo "Tests skipped"

      - name: Build Next.js application
        run: |
          # Build the web app; skip if no build script is defined
          pnpm -C apps/web run build --if-present || echo "Build skipped"
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:8000
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/docker/web.Dockerfile
          push: false
          tags: grounded-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max