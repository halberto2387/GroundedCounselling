name: API CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/api/**'
      - 'services/worker/**'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'services/api/**'
      - 'services/worker/**'
      - '.github/workflows/api-ci.yml'

jobs:
  api-ci:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_grounded_counselling
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install API dependencies
      working-directory: ./services/api
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Install Worker dependencies
      working-directory: ./services/worker
      run: |
        pip install -e ".[dev]"
        
    - name: Lint with ruff (API)
      working-directory: ./services/api
      run: ruff check app/ tests/
      
    - name: Lint with ruff (Worker)
      working-directory: ./services/worker
      run: ruff check worker/ tests/
      
    - name: Format check with black (API)
      working-directory: ./services/api
      run: black --check app/ tests/
      
    - name: Format check with black (Worker)
      working-directory: ./services/worker
      run: black --check worker/ tests/
      
    - name: Type check with mypy (API)
      working-directory: ./services/api
      run: mypy app/
      
    - name: Type check with mypy (Worker)
      working-directory: ./services/worker
      run: mypy worker/
      
    - name: Run API tests
      working-directory: ./services/api
      run: pytest --cov=app --cov-report=xml --cov-report=html
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_grounded_counselling
        REDIS_URL: redis://localhost:6379/1
        JWT_SECRET: test-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        
    - name: Run Worker tests
      working-directory: ./services/worker
      run: pytest --cov=worker --cov-report=xml
      env:
        REDIS_URL: redis://localhost:6379/2
        
    - name: Upload API coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./services/api/coverage.xml
        flags: api
        name: api-coverage
        fail_ci_if_error: false
        
    - name: Upload Worker coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./services/worker/coverage.xml
        flags: worker
        name: worker-coverage
        fail_ci_if_error: false